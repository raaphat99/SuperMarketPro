@using Presentation.ViewModels
@model List<ProductViewModel>

@{
    ViewData["Title"] = "ProductList";
    string NoProductMessage = ViewBag.NoProductMessage ?? string.Empty;
}

<div class="container">
    <h1>Latest Products</h1>
    <hr />
    <a asp-controller="Product" asp-action="Add" class="btn btn-primary">Add Product</a>
    <div class="product-grid">
        @if (Model != null && Model.Count > 0)
        {
            @foreach (var product in Model)
            {
                <div class="product-card">
                    @if (product.ImageData != null)
                    {
                        <img src="data:@product.ImageContentType; base64, @Convert.ToBase64String(product.ImageData)" alt="Product-Image" />
                    }
                    else
                    {
                        <img src="~/media/images/default-product-image.jpg" alt="Default-Product-Image"/>
                    }
                    <div class="card-body">
                        <h5 class="card-title">@product.Name</h5>
                        <p class="card-text">There are @product.Quantity pieces of this product.</p>
                        <p class="card-text">Price: $@product.Price</p>
                        <a asp-controller="Product" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-secondary">Edit</a>
                        <a onclick="showDeleteModal(@product.Id)" class="btn btn-danger">Delete</a>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="alert alert-danger">@NoProductMessage</div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <form>
            @Html.AntiForgeryToken()
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this item?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteButton">Delete</button>
            </div>
        </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        function showDeleteModal(itemId) {
            document.getElementById("confirmDeleteButton").setAttribute("data-item-id", itemId);
            var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'), {
              keyboard: false
            });
            deleteModal.show();
        }

        document.getElementById("confirmDeleteButton").addEventListener("click", function () {
            var itemId = this.getAttribute("data-item-id");
            deleteItem(itemId);
        });

        function deleteItem(itemId) {
            fetch(`/Product/Delete/${itemId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
            })
            .then(response => {
                if (response.redirected) {
                    // Automatically follow the redirect
                    window.location.href = response.url;
                } else if (response.ok) {
                    // Explicitly navigate to the Index page If no redirect, but the response indicates success
                    alert('Item deleted successfully.');
                    window.location.href = '/Product/Index'; 
                } else {
                    alert("Failed to delete the item.");
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert("An error occurred while deleting the item.");
            });
        }
    </script>
}
